/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.meia;

import java.io.*;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author José De León
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_usuario = new javax.swing.JTextField();
        lbl_usuario = new javax.swing.JLabel();
        txt_password = new javax.swing.JTextField();
        lbl_password = new javax.swing.JLabel();
        lbl_login = new javax.swing.JLabel();
        btn_Entrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_usuario.setText("Usuario");

        lbl_password.setText("Password");

        lbl_login.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lbl_login.setText("LOGIN");

        btn_Entrar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_Entrar.setText("Entrar");
        btn_Entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EntrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_password)
                            .addComponent(lbl_usuario)
                            .addComponent(txt_usuario)
                            .addComponent(txt_password, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(lbl_login))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(btn_Entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lbl_login)
                .addGap(18, 18, 18)
                .addComponent(lbl_usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lbl_password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btn_Entrar)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EntrarActionPerformed
        // TODO add your handling code here:
        String usuario = txt_usuario.getText();
        String password = txt_password.getText();

        
        //Valida los inputs
        if("".equals(txt_usuario.getText())|| "".equals(txt_password.getText())){
            String error = "";           
            if("".equals(txt_usuario.getText())){
                error = "Debe ingresar un usuario";
            }
            if("".equals(txt_password.getText())){
                error = "Debe ingresar una contraseña";
            }
            if("".equals(txt_usuario.getText()) && "".equals(txt_password.getText())){
                error = "Debe llenar los campos usuario y password";
            }
            JOptionPane.showMessageDialog(rootPane, error,"Error", WIDTH);
        }
        else
        {
            //Valida si existe en bitacora_usuario        
        File file_bitacora = new File("MEIA\\bitacora_usuario.txt");
        String path_bitacora = file_bitacora.getAbsolutePath();
        String[] registro_bitacora = ObtenerUser(usuario, path_bitacora, "Error");
        
        if(registro_bitacora != null){
            if(ValidarCredenciales(password, registro_bitacora[3].trim()))
                {
                    Inicio abrir_inicio = new Inicio();
                    abrir_inicio.lbl_usuario.setText(registro_bitacora[0]);
                    String rol = "Usuario";
                    if(registro_bitacora[4].trim().equals("1")) rol = "Administrador";
                    abrir_inicio.lbl_rol.setText(rol);
                    abrir_inicio.show();
                    this.setVisible(false);                   
                }
            else{
                JOptionPane.showMessageDialog(null, "Password Incorrecto","Error", WIDTH);
            }
        }
        
        //Valida si existe en usuario   
        File file_usuario = new File("MEIA\\usuario.txt");
        String path_usuario = file_usuario.getAbsolutePath();
        String[] registro_usuario = ObtenerUser(usuario, path_usuario, "Error");
        
        if(registro_usuario != null){
            if(ValidarCredenciales(password, registro_usuario[3].trim()))
                {
                    Inicio abrir_inicio = new Inicio();
                    abrir_inicio.lbl_usuario.setText(registro_usuario[0]);
                    String rol = "Usuario";
                    if(registro_usuario[4].trim().equals("1")) rol = "Administrador";
                    abrir_inicio.lbl_rol.setText(rol);
                    abrir_inicio.show();
                    this.setVisible(false);                   
                }
            else{
                JOptionPane.showMessageDialog(null, "Password Incorrecto","Error", WIDTH);
            }
        }
        
        //Valida si el archivo esta vacío
        if(EstaVacio(path_bitacora, "Error") && EstaVacio(path_usuario, "Error")){
            int confirmacion = JOptionPane.showConfirmDialog(null, "¿Desea crear el usuario?");
            if(confirmacion == 0){
                Registro registrar_admin = new Registro();
            registrar_admin.show();
            registrar_admin.txt_usuario.setText(usuario);
            registrar_admin.txt_rol.setText("Administrador");
            registrar_admin.txt_estatus.setText("Vigente");
            this.setVisible(false); 
            }            
        }
        else
        {
            int confirmacion = JOptionPane.showConfirmDialog(null, "¿Desea crear el usuario?");
            if(confirmacion == 0){
                if(registro_usuario == null && registro_bitacora == null){
                 Registro registrar_admin = new Registro();
                registrar_admin.show();
                registrar_admin.txt_usuario.setText(usuario);
                registrar_admin.txt_rol.setText("Usuario");
                registrar_admin.txt_estatus.setText("Vigente");
                this.setVisible(false); 
                }        
            }              
        }
    }

    }//GEN-LAST:event_btn_EntrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    public String[] ObtenerUser(String user, String path, String strError){
        File Archivo = new File(path);
        if(Archivo.exists()==true)
        {
            FileReader LecturaArchivo;
            try {
                LecturaArchivo = new FileReader(Archivo);
                BufferedReader LeerArchivo = new BufferedReader(LecturaArchivo);
                String Linea="";
                try {
                    Linea = LeerArchivo.readLine();
                    String[] split;
                    while(Linea != null)
                    {
                        if(!"".equals(Linea))
                        {
                            split = Linea.split("\\|");
                            String current_user = split[0];
                            if(user.equals(current_user.trim())) return split;
                        }
                        Linea = LeerArchivo.readLine();
                    }

                    LecturaArchivo.close();
                    LeerArchivo.close();              
                } catch (IOException ex) {
                    strError= ex.getMessage();
                }
            } catch (FileNotFoundException ex) {
                strError= ex.getMessage();
            }            
        }
        else
        {
            strError="No existe el archivo";
        }
        return null;
    }
    
    public boolean EstaVacio(String path, String strError){
        File Archivo = new File(path);
        if(Archivo.exists()==true)
        {
            FileReader LecturaArchivo;
            try {
                LecturaArchivo = new FileReader(Archivo);
                BufferedReader LeerArchivo = new BufferedReader(LecturaArchivo);
                String Linea="";
                try {
                    Linea = LeerArchivo.readLine();
                    Linea = LeerArchivo.readLine();
                    
                    if(Linea == null){
                    LecturaArchivo.close();
                    LeerArchivo.close();           
                    return true;
                    }    
                    
                } catch (IOException ex) {
                    strError= ex.getMessage();
                }
            } catch (FileNotFoundException ex) {
                strError= ex.getMessage();
            }            
        }
        else
        {
            strError="No existe el archivo";
        }
        return false;
    }
    
    public boolean ValidarCredenciales(String password_ingresada, String password_obtenida){       
    if(password_ingresada.equals(password_obtenida)) return true;
     return false;   
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Entrar;
    private javax.swing.JLabel lbl_login;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_usuario;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
